service: graphql-api # AWS CloudFormation will create Stack with this name, new name = new Stack

frameworkVersion: ">=1.36.3 <2.0.0"

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs10.x
  stage: ${opt:stage, self:custom.defaultProfile}
  #profile: ${self:custom.profiles.${self:provider.stage}.name}
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 12 # the timeout is 12 seconds (default is 6 seconds)
  # reservedConcurrency: 5 # optional, reserved concurrency limit for this function. By default, AWS uses account concurrency limit
  # profile: devProfile
  # deploymentBucket:
  #   name: com.graphql-serverless.${self:provider.region}.deploys # Deployment bucket name. Default is generated by the serverless framework
  #   serverSideEncryption: AES256 # when using server-side encryption
  # vpc: # Optional VPC. But if you use VPC then both subproperties (securityGroupIds and subnetIds) are required from the profiles
  #   securityGroupIds: ${self:custom.profiles.${self:provider.stage}.vpc.securityGroupIds}
  #   subnetIds: ${self:custom.profiles.${self:provider.stage}.vpc.subnetIds}

custom:
  serverless-offline:
    port: 4000
  defaultProfile: dev
  # profiles: # required by provider.vpc section if you want to have your lambda in a vpc
  #   dev:
  #     name: devProfile
  #     vpc:
  #       securityGroupIds: ['sg-111dev456']
  #       subnetIds: ['subnet-123dev456', 'subnet-111dev222']
  #   prod:
  #     name: prodProfile
  #     vpc:
  #       securityGroupIds: ['sg-123abc456']
  #       subnetIds: ['subnet-123abc456', 'subnet-111abc222']
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules: true   # Node modules configuration for packaging
    packager: 'yarn'   # Packager that will be used to package your external modules

functions:
  api:
    handler: handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
